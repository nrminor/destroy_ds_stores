# direnv configuration for dds project
# This file enables automatic environment loading with direnv

# Check if nix-direnv is available (provides 'use flake')
if has use_flake; then
    # Use the Nix flake for development environment
    use flake
else
    echo "⚠️  nix-direnv not found. Install it for automatic flake support."
    echo "   Without nix-direnv, run 'nix develop' manually."
fi

# Project-specific environment variables
export PROJECT_NAME="dds"
export RUST_LOG="dds=debug"

# Database configuration for development
export DATABASE_URL="sqlite:dev.db"

# Enable colored output
export CLICOLOR="1"
export CLICOLOR_FORCE="1"

# Cargo configuration
# export CARGO_HOME="./.cargo"  # Commented out to use global cargo
export CARGO_TARGET_DIR="./target"

# Enable incremental compilation for faster builds
export CARGO_INCREMENTAL="1"

# Set up local bin path for project tools
PATH_add "./target/release"
PATH_add "./target/debug"
# Also add the global cargo bin to ensure installed tools are available
PATH_add "$HOME/.cargo/bin"

# Check if dev database exists
if [ ! -f "dev.db" ]; then
    echo "📝 Creating dev.db for sqlx compile-time checking..."
    touch dev.db
fi

# Show environment info when entering directory
echo "🦀 dds development environment loaded!"
echo "   Rust: $(rustc --version 2>/dev/null | cut -d' ' -f2 || echo 'not found')"
echo "   Location: $(pwd)"

# If nix-direnv is not available but Rust is, show what we have
if ! has use_flake && command -v cargo &> /dev/null; then
    echo "   Using system Rust installation"
fi
